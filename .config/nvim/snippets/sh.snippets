snippet script_path_executing "SCRIPT_PATH to directory of script location"
	SCRIPTPATH=$(dirname "$(realpath "\$0")")

snippet script_path "SCRIPT_PATH to directory of script location"
	SCRIPTPATH=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

snippet random_string "Random string in bash"
	ID=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 13; echo)

snippet set+x "silent set +x"
	{ set +x; } 2>/dev/null

snippet required_var "Set required variable in sh"
	: "\${${1:VAR}?"Error: $1 is a required variable"}"

snippet colors "A bunch of colors for shell scripting [regular]"
	RESET='\033[0m'
	BlACK='\033[0;30m'
	RED='\033[0;31m'
	GREEN='\033[0;32m'
	YELLOW='\033[0;33m'
	BLUE='\033[0;34m'
	PURPLE='\033[0;35m'
	CYAN='\033[0;36m'
	WHITE='\033[0;37m'
	PS4="\${YELLOW}>>>\${Color_Off} "

snippet colors_bold "A bunch of colors for shell scripting [bold]"
	BBlack='\033[1;30m'
	BRed='\033[1;31m'
	BGreen='\033[1;32m'
	BYellow='\033[1;33m'
	BBlue='\033[1;34m'
	BPurple='\033[1;35m'
	BCyan='\033[1;36m'
	BWhite='\033[1;37m'

snippet colors_underline "A bunch of colors for shell scripting [underline]"
	UBlack='\033[4;30m'
	URed='\033[4;31m'
	UGreen='\033[4;32m'
	UYellow='\033[4;33m'
	UBlue='\033[4;34m'
	UPurple='\033[4;35m'
	UCyan='\033[4;36m'
	UWhite='\033[4;37m'

snippet heredoc_new_file "Here content to new file"
	cat << EOF > $1
	$2
	EOF

snippet arguments_bash "bash Space seperated --option arguments"
	POSITIONAL_ARGS=()

	while [[ $# -gt 0 ]]; do
		case \$1 in
		-s | --something)
			arg="\$2"
			SOMETHING=("$arg")
			shift 2 # with arg
			;;
		--default)
			DEFAULT=YES
			shift # with out
			;;
		-*)
			echo "Unknown option \$1"
			exit 1
			;;
		*)
			POSITIONAL_ARGS+=("\$1") # save positional arg
			shift                   # past argument
			;;
		esac
	done

	set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

	echo "${POSITIONAL_ARGS[@]}"

snippet get_required_apps "Bash function to get required applications for this program"
	get_required_apps() {
		needed=($1)
		for need in "\${needed[@]}"; do
			if ! command -v "\$need" >/dev/null; then
				echo "Missing  required app: \${need}"
				exit 1
			fi
		done
	}

snippet loop_over_file "While loop for contents of a file"
	while read -r line; do
		echo "--> \$line"
	done <$1

snippet export_oauth_vault_cred "SM export var with vault lookup"
	export $1__client_$2="{{ vault_lookup('[vp]/data/oauth', '$1_client_$2', vault_token) }}"

snippet split_to_array_comma "Split a comma seperated string by comma"
	mapfile -t -d ',' ${1:new_array} < <(printf '%s' "${2:foo,bar}")

snippet join_array_comma "Join an array by comma"
	${1:VAR}=$(
		IFS=$','
		echo "\${${2:array}[*]}"
	)
