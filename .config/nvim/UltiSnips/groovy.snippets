snippet dir "jenkins work into directory" b
dir("${1:newDir}"{

}
endsnippet
snippet sh-multiline "multi line shell command in jenkins" b
sh"""
${1:echo 'Hello World!'}
"""
endsnippet

snippet sh-returnStdout "multiline shell that returns std out to variable" b
def ${1:myVar} = sh(script: """

""", returnStdout: true).trim()

endsnippet

snippet input "Jenkins pause for Input" b
stage('Pause for Input'){ 
    input {
        message "Should we continue?" ok "Yes, we should."
    } 
    steps{
        echo "continue"
    }
}
endsnippet

snippet stage "Jenkins Stage Template" b
stage('${1:Stage}') {
  steps {
  ${2:Put Executions Here}
  }
}
endsnippet

snippet choice "Jenkins Choice parameter" b
choice(name: '${1}', choices: ['${2:Choice1}', '${3:Choice2}'], description: '${4}')
endsnippet

snippet booleanParam "Jenkins Boolean parameter" b
booleanParam(name: '${1}', defaultValue: true, description: '${2}')
endsnippet

snippet string "Jenkins string parameter" b
string(name: '${1}', defaultValue: '${2}', description: '${3}')
endsnippet

snippet text "Jenkins text parameter" b
text(name: '${1}', defaultValue: '${2}', description: '${3}')
endsnippet

snippet k8s_pipeline "Jenkins Pipeline with kubernetes Pod" b

pipeline {
  agent {
    kubernetes {
      //cloud 'kubernetes'
      yamlFile ''
    }
  }
  stages {
    stage('${1:Stage 1}') {
      steps {
        container("some container"){
        sh"""
        cd /opt/testing
        sudo apt update
        sudo apt -y install git openjdk-8-jdk maven 
        git config --global http.sslVerify false
        git clone https://oauth2:$GIT_CRED@github.houston.softwaregrp.net/aauth/aaf-automation.git
        cd aaf-automation
        """
        }
      }
    }
  }
}
endsnippet
snippet post "Jenkins file post condition" b
    post {
        always{
        }
        aborted{
        }
        failure{
        }
        success{
        }
        unstable{
        }
        cleanup{
        }
    }
endsnippet

snippet pipeline "Default Declarative Jenkins Pipeline"

pipeline {
		parameters{
      string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
        // text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
        // booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
        // choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
        // password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    agent {label 'dops-worker'}
    stages {
        stage('setup') {
            steps {
                git branch: 'master',
                        credentialsId: 'github-app-aa',
                        url: 'URL'
            }
        }
        stage('${1:execute}') {
            steps {

						}
        }
    }
//    post {
//				aborted {
//
//				}
//        success {
//
//        }
//        failure {
//
//				}
//        unstable{
//
//        }
//    }
}
endsnippet

